openapi: 3.0.0
info:
  title: Ginkgo API Document
  version: '1.0'
  contact:
    name: Hieren
    url: 'https://github.com/hienlh'
    email: hienlh1298@gmail.com
  description: ''
servers:
  - url: 'https://micro-api-core.herokuapp.com/api/v1'
  - url: 'http://localhost:5001/api/v1'
  - url: 'http://localhost:5000/api/v1'
  - url: '{protocol}://{host}{port}/api/{version}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      host:
        default: micro-api-core.herokuapp.com
      port:
        default: ''
        description: 'Example :5000'
      version:
        enum:
          - v1
        default: v1
paths:
  /users/authenticate:
    post:
      summary: ''
      operationId: post-users-authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  default: test123
                  format: password
                  minLength: 6
                email:
                  type: string
                  default: test@gingko.com
                  format: email
              required:
                - email
                - password
      security: []
      tags:
        - User
  /users/me/tours:
    get:
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: number
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SimpleTour'
      operationId: get-users-me-tours
      security:
        - Authorization: []
  /users/me/friends:
    get:
      summary: ''
      operationId: get-users-me-friends
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: number
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SimpleUser'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - errorCode
                  - message
                  - data
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorization: []
      tags:
        - User
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: Page Index
        - schema:
            type: integer
          in: query
          name: pageSize
  /users/social-provider:
    post:
      summary: ''
      operationId: post-users-social-provider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                type:
                  type: string
                  enum:
                    - facebook
                    - google
                  default: facebook
                  example: facebook
                email:
                  type: string
                  format: email
                  description: Optional dùng trong trường hợp đăng kí và social ko cung cấp email.
              required:
                - accessToken
                - type
      tags:
        - User
      security: []
  /users/me:
    get:
      summary: ''
      operationId: get-users-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: number
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
                required:
                  - errorCode
                  - message
                  - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorization: []
      tags:
        - User
  /users/register:
    post:
      summary: ''
      operationId: post-users-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                password:
                  type: string
      tags:
        - User
      security: []
  '/users/{id}':
    get:
      summary: Get user by id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: number
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
                required:
                  - errorCode
                  - message
                  - data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-users-id
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: user id
components:
  schemas:
    Pagination:
      title: Pagination
      type: object
      properties:
        totalPage:
          type: integer
        totalElement:
          type: integer
        currentPage:
          type: integer
        pageSize:
          type: integer
    SimpleUser:
      title: SimpleUser
      type: object
      x-tags:
        - User
      properties:
        id:
          type: integer
        name:
          type: string
        avatar:
          type: string
          format: uri
        job:
          type: string
      required:
        - id
        - name
        - avatar
    ErrorResponse:
      title: Error
      type: object
      properties:
        errorCode:
          default: 1
          type: integer
        message:
          type: string
          default: Error message
      required:
        - errorCode
        - message
    SocialProvider:
      title: SocialProvider
      type: object
      x-examples: {}
      x-tags:
        - User
      properties:
        id:
          type: string
        name:
          type: string
          default: Tester
        email:
          type: string
          format: email
          default: test@ginkgo.com
          example: test@ginkgo.com
        avatar:
          type: string
          format: uri
        type:
          type: string
          enum:
            - facebook
            - google
          example: facebook
          default: facebook
      required:
        - id
        - type
    User:
      title: User
      type: object
      description: ''
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
          default: test@ginkgo.com
          format: email
          example: test@ginkgo.com
        phoneNumber:
          type: string
          example: '+8498765432'
        address:
          type: string
        avatar:
          type: string
          format: uri
        slogan:
          type: string
        bio:
          type: string
        job:
          type: string
        gender:
          type: string
          enum:
            - male
            - femail
            - other
        birthday:
          type: string
          format: date-time
        socialProviders:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SocialProvider'
      required:
        - id
        - email
        - phoneNumber
      x-tags:
        - User
    AuthResponse:
      title: AuthResponse
      type: object
      properties:
        errorCode:
          type: integer
        message:
          type: string
        data:
          type: string
          example: Token
      required:
        - errorCode
        - message
        - data
    Tour:
      title: Tour
      type: object
      description: ''
      properties:
        id:
          type: integer
        name:
          type: string
        startDay:
          type: string
        endDay:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/SimpleUser'
        maxMember:
          type: integer
        timelines:
          type: array
          items:
            $ref: '#/components/schemas/Timeline'
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDetail'
      required:
        - id
        - startDay
        - endDay
    SimpleTour:
      title: SimpleTour
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        startDay:
          type: string
          format: date-time
        endDay:
          type: string
          format: date-time
        totalMember:
          type: integer
        host:
          $ref: '#/components/schemas/SimpleUser'
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDetail'
      required:
        - id
        - name
        - startDay
        - endDay
        - totalMember
        - host
    Post:
      title: Post
      type: object
      properties:
        id:
          type: integer
        author:
          $ref: '#/components/schemas/SimpleUser'
        content:
          type: string
          description: Nội dung bài viết
        images:
          type: array
          description: Danh sách hình ảnh nếu có
          items:
            type: string
        totalLike:
          type: integer
          description: Tổng lượt thích
        totalComment:
          type: integer
          description: Tổng lượt bình luận
        featuredComment:
          $ref: '#/components/schemas/Comment'
      required:
        - id
        - author
        - content
    Comment:
      title: Comment
      type: object
      properties:
        id:
          type: integer
        author:
          $ref: '#/components/schemas/SimpleUser'
        content:
          type: string
          description: Nội dung bình luận
    Feedback:
      title: Feedback
      type: object
      properties:
        id:
          type: integer
    Place:
      title: Place
      type: object
      properties:
        id:
          type: integer
    TourInfo:
      title: TourInfo
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        images:
          type: array
          items:
            type: string
        startPlace:
          $ref: '#/components/schemas/Place'
        destinatePlage:
          $ref: '#/components/schemas/Place'
    Timeline:
      title: Timeline
      type: object
      properties:
        id:
          type: integer
        places:
          type: array
          description: Danh sách địa điểm
          items:
            $ref: '#/components/schemas/Place'
        day:
          type: string
          format: date-time
          description: Ngày của timeline
        description:
          type: string
      required:
        - id
        - places
        - day
    Service:
      title: Service
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          description: Tên detail
          example: Khách sạn 3 sao
        image:
          type: string
      required:
        - id
        - name
        - image
    ServiceDetail:
      title: ServiceDetail
      type: object
      properties:
        id:
          type: number
          example: 1
        service:
          $ref: '#/components/schemas/Service'
        detail:
          type: string
          description: Chi tiết của detail
          example: Khách sạn Rạng Đông
      required:
        - id
        - service
        - detail
  securitySchemes:
    Authorization:
      name: Authorization
      type: apiKey
      in: header
security:
  - Authorization: []
