openapi: 3.0.0
info:
  title: Ginkgo API Document
  version: '1.0'
  contact:
    name: Hieren
    url: 'https://github.com/hienlh'
    email: hienlh1298@gmail.com
  description: ''
servers:
  - url: 'https://micro-api-core.herokuapp.com/api/v1'
  - url: 'http://localhost:5001/api/v1'
  - url: 'http://localhost:5000/api/v1'
  - url: '{protocol}://{host}{port}/api/{version}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      host:
        default: micro-api-core.herokuapp.com
      port:
        default: ''
        description: 'Example :5000'
      version:
        enum:
          - v1
        default: v1
paths:
  /users/authenticate:
    post:
      summary: ''
      operationId: post-users-authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Password:
                  type: string
                  default: test123
                  format: password
                  minLength: 6
                Email:
                  type: string
                  default: test@gingko.com
                  format: email
              required:
                - Password
                - Email
      security: []
      tags:
        - User
  /users/me/tours:
    get:
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: number
                  Message:
                    type: string
                  Data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SimpleTour'
      operationId: get-users-me-tours
      security:
        - Authorization: []
  /users/me/friends:
    get:
      summary: ''
      operationId: get-users-me-friends
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: number
                  Message:
                    type: string
                  Data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SimpleUser'
                  Pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - ErrorCode
                  - Message
                  - Data
            application/xml:
              schema:
                type: object
                properties: {}
          headers: {}
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorization: []
      tags:
        - User
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: Page Index
        - schema:
            type: integer
          in: query
          name: pageSize
  /users/social-provider:
    post:
      summary: ''
      operationId: post-users-social-provider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AccessToken:
                  type: string
                Type:
                  type: string
                  enum:
                    - facebook
                    - google
                  default: facebook
                  example: facebook
                Email:
                  type: string
                  format: email
                  description: Optional dùng trong trường hợp đăng kí và social ko cung cấp email.
              required:
                - AccessToken
                - Type
      tags:
        - User
      security: []
  /users/me:
    get:
      summary: ''
      operationId: get-users-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: number
                  Message:
                    type: string
                  Data:
                    $ref: '#/components/schemas/User'
                required:
                  - ErrorCode
                  - Message
                  - Data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - Authorization: []
      tags:
        - User
  /users/register:
    post:
      summary: ''
      operationId: post-users-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                Email:
                  type: string
                PhoneNumber:
                  type: string
                Password:
                  type: string
      tags:
        - User
      security: []
  '/users/{id}':
    get:
      summary: Get user by id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ErrorCode:
                    type: number
                  Message:
                    type: string
                  Data:
                    $ref: '#/components/schemas/User'
                required:
                  - ErrorCode
                  - Message
                  - Data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-users-id
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: user id
components:
  schemas:
    Pagination:
      title: Pagination
      type: object
      properties:
        TotalPage:
          type: integer
        TotalElement:
          type: integer
        CurrentPage:
          type: integer
        PageSize:
          type: integer
    SimpleUser:
      title: SimpleUser
      type: object
      x-tags:
        - User
      properties:
        Id:
          type: integer
        Name:
          type: string
        Avatar:
          type: string
          format: uri
        Job:
          type: string
      required:
        - Id
        - Name
        - Avatar
    ErrorResponse:
      title: Error
      type: object
      properties:
        ErrorCode:
          default: 1
          type: integer
        Message:
          type: string
          default: Error message
      required:
        - ErrorCode
        - Message
    SocialProvider:
      title: SocialProvider
      type: object
      x-examples: {}
      x-tags:
        - User
      properties:
        Id:
          type: string
        Name:
          type: string
          default: Tester
        Email:
          type: string
          format: email
          default: test@ginkgo.com
          example: test@ginkgo.com
        Avatar:
          type: string
          format: uri
        Type:
          type: string
          enum:
            - facebook
            - google
          example: facebook
          default: facebook
      required:
        - Id
        - Type
    User:
      title: User
      type: object
      description: ''
      x-tags:
        - User
      properties:
        Id:
          type: number
        Name:
          type: string
        Email:
          type: string
          default: test@ginkgo.com
          format: email
          example: test@ginkgo.com
        PhoneNumber:
          type: string
          example: '+8498765432'
        Address:
          type: string
        Avatar:
          type: string
          format: uri
        Slogan:
          type: string
        Bio:
          type: string
        Job:
          type: string
        Gender:
          type: string
          enum:
            - male
            - femail
            - other
        Birthday:
          type: string
          format: date-time
        SocialProviders:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SocialProvider'
        Role:
          type: string
          enum:
            - admin
            - creator
            - user
      required:
        - Id
        - Email
        - PhoneNumber
    AuthResponse:
      title: AuthResponse
      type: object
      properties:
        ErrorCode:
          type: integer
        Message:
          type: string
        Data:
          type: array
          example: Token
          minItems: 1
          maxItems: 1
          items:
            type: string
            example: token
      required:
        - ErrorCode
        - Message
        - Data
    Tour:
      title: Tour
      type: object
      description: ''
      properties:
        Id:
          type: integer
        Name:
          type: string
        StartDay:
          type: string
        EndDay:
          type: string
        Members:
          type: array
          items:
            $ref: '#/components/schemas/SimpleUser'
        MaxMember:
          type: integer
        Timelines:
          type: array
          items:
            $ref: '#/components/schemas/Timeline'
        Services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDetail'
      required:
        - Id
        - StartDay
        - EndDay
    SimpleTour:
      title: SimpleTour
      type: object
      properties:
        Id:
          type: integer
        Name:
          type: string
        StartDay:
          type: string
          format: date-time
        EndDay:
          type: string
          format: date-time
        TotalMember:
          type: integer
        Host:
          $ref: '#/components/schemas/SimpleUser'
        Services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceDetail'
      required:
        - Id
        - Name
        - StartDay
        - EndDay
        - TotalMember
        - Host
    Post:
      title: Post
      type: object
      properties:
        Id:
          type: integer
        Author:
          $ref: '#/components/schemas/SimpleUser'
        Content:
          type: string
          description: Nội dung bài viết
        Images:
          type: array
          description: Danh sách hình ảnh nếu có
          items:
            type: string
        TotalLike:
          type: integer
          description: Tổng lượt thích
        TotalComment:
          type: integer
          description: Tổng lượt bình luận
        FeaturedComment:
          $ref: '#/components/schemas/Comment'
      required:
        - Id
        - Author
        - Content
    Comment:
      title: Comment
      type: object
      properties:
        Id:
          type: integer
        Author:
          $ref: '#/components/schemas/SimpleUser'
        Content:
          type: string
          description: Nội dung bình luận
    Feedback:
      title: Feedback
      type: object
      properties:
        Id:
          type: integer
    Place:
      title: Place
      type: object
      properties:
        Id:
          type: integer
    TourInfo:
      title: TourInfo
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
        Images:
          type: array
          items:
            type: string
        StartPlace:
          $ref: '#/components/schemas/Place'
        DestinatePlace:
          $ref: '#/components/schemas/Place'
    Timeline:
      title: Timeline
      type: object
      properties:
        Id:
          type: integer
        Places:
          type: array
          description: Danh sách địa điểm
          items:
            $ref: '#/components/schemas/Place'
        Day:
          type: string
          format: date-time
          description: Ngày của timeline
        Description:
          type: string
      required:
        - Id
        - Places
        - Day
    Service:
      title: Service
      type: object
      properties:
        Id:
          type: number
          example: 1
        Name:
          type: string
          description: Tên detail
          example: Khách sạn 3 sao
        Image:
          type: string
      required:
        - Id
        - Name
        - Image
    ServiceDetail:
      title: ServiceDetail
      type: object
      properties:
        Id:
          type: number
          example: 1
        Service:
          $ref: '#/components/schemas/Service'
        Detail:
          type: string
          description: Chi tiết của detail
          example: Khách sạn Rạng Đông
      required:
        - Id
        - Service
        - Detail
  securitySchemes:
    Authorization:
      name: Authorization
      type: apiKey
      in: header
security:
  - Authorization: []
